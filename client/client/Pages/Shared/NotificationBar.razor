@using client.DTO.Notification
@inject INotificationService NotificationService
@inject NavigationManager NavigationManager

<div class="notifications-container">
    <h3 class="notifications-header">Notifications</h3>
    <div class="notifications-list">
        @foreach (var notification in notifications)
        {
            <div class="notification-item" @onclick="() => NavigateToDetail(notification.SubjectId)">
                @* <img src="@GetLogo(notification.Type)" alt="@notification.Type" class="logo"/> *@
                <div class="notification-details">
                    <strong class="notification-header">@notification.UserRole</strong>
                    <div class="content">@notification.Content</div>
                    <div class="time">@GetTimeAgo(notification.Timestamp)</div>
                </div>
            </div>
        }
        @if(notifications.Count == 0)
        {
            <p>No notifications available.</p>
        }
    </div>
</div>

@code {

    // List of notifications (mock data for now, replace with API call later)
    private List<NotificationResponseDto> notifications = new();
    
    protected override async Task OnInitializedAsync()
    {
        notifications = await NotificationService.GetNotifications();
        Console.WriteLine("Notifications count: " +notifications.Count);
    }

    // Helper to format time ago
    private string GetTimeAgo(DateTime timestamp)
    {
        Console.WriteLine("Timestamp: " + timestamp);
        // Ensure everything is compared in UTC+1 (add 1 hour to UTC)
        var localTime = timestamp.ToUniversalTime(); 
        var currentTime = DateTime.UtcNow;

        var timeSpan = currentTime - localTime;

        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes}m";
        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours}h";
        return $"{(int)timeSpan.TotalDays}d";
    }

    
    private void NavigateToDetail(string subjectId)
    {
        // Navigate to detailedPurchase/{id}
        NavigationManager.NavigateTo($"/detailedPurchase/{subjectId}");
    }
}