@page "/auth/registration/customer"

@using client.Dto
@using client.Dto.Auth
@using client.Security
@inject NavigationManager NavigationManager
@inject AuthStateProvider AuthStateProvider

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header text-center">
                    <h3>Register as Customer</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" />

                        <div class="mb-3">
                            <label for="firstName" class="form-label">First Name:</label>
                            <InputText id="firstName" @bind-Value="registerModel.FirstName" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="lastName" class="form-label">Last Name:</label>
                            <InputText id="lastName" @bind-Value="registerModel.LastName" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email:</label>
                            <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="phoneNumber" class="form-label">Phone Number:</label>
                            <InputText id="phoneNumber" @bind-Value="registerModel.PhoneNumber" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password:</label>
                            <InputText id="password" @bind-Value="registerModel.Password" Type="password" class="form-control" />
                        </div>

                        <h4 class="mt-4">Address</h4>
                        <div class="row">
                            <div class="col-md-8 mb-3">
                                <label for="street" class="form-label">Street:</label>
                                <InputText id="street" @bind-Value="registerModel.Address.Street" class="form-control"/>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="number" class="form-label">Number:</label>
                                <InputText id="number" @bind-Value="registerModel.Address.Number" class="form-control"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-8 mb-3">
                                <label for="city" class="form-label">City:</label>
                                <InputText id="city" @bind-Value="registerModel.Address.City" class="form-control"/>
                            </div>
                            <div class="col-md-4 mb-3">
                                <label for="postalCode" class="form-label">Postal Code:</label>
                                <InputText id="postalCode" @bind-Value="registerModel.Address.PostalCode" class="form-control"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="mb-3">
                                <label for="country" class="form-label">Country:</label>
                                <InputText id="country" @bind-Value="registerModel.Address.Country" class="form-control"/>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="county" class="form-label">County:</label>
                            <InputText id="county" @bind-Value="registerModel.Address.County" class="form-control"/>
                        </div>
                        <div class="mb-3">
                            <label for="state" class="form-label">State:</label>
                            <InputText id="state" @bind-Value="registerModel.Address.State" class="form-control"/>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-danger">Register</button>
                        </div>
                    </EditForm>
                </div>

                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="card-footer text-success text-center">
                        <p>@successMessage</p>
                    </div>
                }

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="card-footer text-danger text-center">
                        <p>@errorMessage</p>
                    </div>
                }
            </div>

            <div class="text-center mt-3">
                <p>
                    Already have an account? 
                    <a href="/auth/login" class="text-decoration-none">Click here to login</a>.
                </p>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterCustomerRequestDto registerModel = new()
    {
        FirstName = "DummyFirstName",
        LastName = "DummyLastName",
        Email = $"dummyemail{DateTime.UtcNow:HHmmssfff}@example.com",
        Password = "password",
        PhoneNumber = "1234567890",
        Address = new AddressDto
        {
            Street = "Dummy Street",
            Number = "123",
            City = "Dummy City",
            County = "Dummy County",
            State = "Dummy State",
            Country = "Dummy Country",
            PostalCode = "12345"
        }
    };


    private string? successMessage;
    private string? errorMessage;

    private async Task HandleRegistration()
    {
        try
        {
            errorMessage = null;
            await AuthStateProvider.RegisterCustomerAsync(registerModel);
            successMessage = "Registration successful! Redirecting...";
            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            errorMessage = "Registration failed. Please try again.";
            successMessage = null;
        }
    }
}
