@using client.Dto.Offer
@using client.Dto
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor

@* <div class="search-bar-container"> *@
@*     <div class="map-icon"> *@
@*         <i class="bi bi-geo-alt"></i> *@
@*     </div> *@
@*     <div class="search-bar"> *@
@*         <input class="search-input" placeholder="Search..." /> *@
@*         <div class="search-icon"> *@
@*             <i class="bi bi-search"></i> *@
@*         </div> *@
@*     </div> *@
@*     <div class="filter-icon-bubble" @onclick="ToggleFilters"> *@
@*         <i class="bi bi-sliders"></i> *@
@*     </div> *@
@* </div> *@

@* @if (showFilterPopup) *@
@* { *@
@*     <div class="popup-overlay"> *@
@*         <div class="popup-window"> *@
@*             <div class="popup-header"> *@
@*                 <h3>Filters</h3> *@
@*                 <button class="close-button" @onclick="ToggleFilters">&times;</button> *@
@*             </div> *@
@*             <div class="popup-body"> *@
@*                 <!-- Category Picker for Filters --> *@
@*                 <CategoryPickerComponent @bind-selectedCategories="selectedCategories" /> *@
@* *@
@*                 <!-- Collection Time Filter --> *@
@*                 <div class="filter-section"> *@
@*                     <label>Collection Time</label> *@
@*                     <SfSlider TValue="int[]" @bind-Value="timeRange" Type="SliderType.Range" Min="0" Max="24" Step="1" /> *@
@*                     <p>From: @timeRange[0]:00 To: @timeRange[1]:00</p> *@
@*                 </div> *@
@* *@
@*                 <!-- Price Range Filter --> *@
@*                 <div class="filter-section"> *@
@*                     <label>Price Range</label> *@
@*                     <SfSlider TValue="int[]" @bind-Value="priceRange" Type="SliderType.Range" Min="0" Max="500" Step="1" /> *@
@*                     <p>From: @priceRange[0] To: @priceRange[1]</p> *@
@*                 </div> *@
@*             </div> *@
@*             <div class="popup-footer"> *@
@*                 <button class="clear-button" @onclick="ClearFilters">Clear Filters</button> *@
@*                 <button class="apply-button" @onclick="ApplyFilters">Apply</button> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* } *@

<div @attributes="AdditionalAttributes" class="offer" style="width: @OfferWidth; margin-bottom: @OfferMarginBottom;" @onclick="() => ShowOfferDetails(OfferData.Id)">
    <div class="offer__top">
        <div class="offer__top--left">@OfferData.NumberOfAvailableItems Left</div>

        <div class="offer__top--business">
            <div class="offer__top--business__icon">
                <img src="@(HttpClient.BaseAddress + "images/" + OfferData.BusinessLogoPath)" onerror="this.src='/images/businessLogoPlaceholder.jpg'" alt="Offer Image">
            </div>
            <h3 class="offer__top--business__name"> @OfferData.BusinessName</h3>
            @* <h2 class="offer__top--business__name">@OfferData.BusinessDetails.Name</h2> *@
        </div>
    </div>

    <div class="offer__img">
        <img src="@(HttpClient.BaseAddress + "images/" + OfferData.ImagePath)" onerror="this.src='/images/offerPlaceholder.jpg'" alt="Offer Image">
    </div>

    <div class="offer__bottom">
        <h3 class="offer__bottom--name">@OfferData.Title</h3>
        <div class="offer__bottom--pickup">
            Collect on <em>@OfferData.PickupTimeStart.ToString("dd/MM/yyyy")</em>,
            from <em>@OfferData.PickupTimeStart.ToString("HH:mm")</em>
            to <em>@OfferData.PickupTimeEnd.ToString("HH:mm")</em>
        </div>
        <div class="offer__bottom--stats">
            <div class="offer__bottom--stats__price">@OfferData.OfferPrice.ToString("0.00") kr.</div>
        </div>
    </div>
</div>


@code {
    [Parameter] 
    public OfferResponseDto OfferData { get; set; }
    [Parameter]
    public string OfferWidth { get; set; } = "30rem"; // Default width
    [Parameter]
    public string OfferMarginBottom { get; set; } = "0px"; // Default margin-bottom

    public Dictionary<string, object> AdditionalAttributes { get; set; }
    
    private void ShowOfferDetails(string offerId)
    {
        NavigationManager.NavigateTo($"offers/{offerId}");
    }
    
}
