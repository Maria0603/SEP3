@page "/temp"
@using client.DTO.Notification
@inject IJSRuntime JS
@inject IJSRuntime JSRuntime


<h3>Notifications</h3>

<ul>
    @foreach (var notification in Notifications)
    {
        <li>@notification</li>
    }
</ul>

@code {
    private List<string> Notifications = new List<string>();
    private DotNetObjectReference<Temp>? DotNetRef;
    
    private IJSObjectReference? module;


    protected override async Task OnInitializedAsync()
    {
        DotNetRef = DotNetObjectReference.Create(this);
        module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/sse.js");
        await module.InvokeVoidAsync("connectSSE", "http://localhost:8082/notifications/stream", DotNetRef);
        //await JS.InvokeVoidAsync("connectSSE", "/notifications/stream", DotNetRef);
    }

    [JSInvokable]
    public Task ReceiveNotification(string notification)
    {
        Notifications.Add(notification);
        InvokeAsync(StateHasChanged);
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        DotNetRef?.Dispose();
    }

}