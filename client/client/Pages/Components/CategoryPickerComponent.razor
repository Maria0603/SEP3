@using client.DTO
<div class="mb-3">
    <label for="categories">Categories</label>
    <div class="d-flex align-items-center">
        <select id="categories" @bind="selectedCategory" class="form-control category-dropdown">
            @foreach (var category in availableCategories) {
                <option value="@category.Name">@category.Name</option>
            }
        </select>
        <button type="button" @onclick="AddCategory" class="btn btn-secondary ms-2">Add</button>
    </div>
    <div class="selected-categories mt-2">
        @foreach (var category in selectedCategories) {
            <div class="category-box">
                <span class="category-text">@category.Name</span>
                <button type="button" @onclick="() => RemoveCategory(category)" class="btn btn-danger btn-sm">X</button>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public List<Category> selectedCategories { get; set; }
    private string selectedCategory;
    private string categoriesInput = string.Empty;

    private List<Category> availableCategories = [
        new Category { Name = "Bread" },
        new Category { Name = "Vegan" },
        new Category { Name = "Pastry" },
        new Category { Name = "Dairy" }
    ];

    protected override void OnInitialized() {
        if (availableCategories.Any()) {
            selectedCategory = availableCategories.First().Name;
        }
    }

    private void AddCategory() {
        if (!string.IsNullOrEmpty(selectedCategory) && !selectedCategories.Any(c => c.Name == selectedCategory)) {
            selectedCategories.Add(new Category { Name = selectedCategory });
        }
    }

    private void RemoveCategory(Category category) {
        selectedCategories.Remove(category);
    }

    public class Category {
        public string Name { get; set; }
        public bool IsSelected { get; set; }
    }
}