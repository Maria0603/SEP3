<div class="mb-3">
    <label for="categories">Categories</label>
    <div class="d-flex align-items-center">
        <select id="categories" @bind="SelectedCategory" class="form-control category-dropdown">
            @foreach (var category in AvailableCategories)
            {
                <option value="@category.Name">@category.Name</option>
            }
        </select>
        <button type="button" @onclick="AddCategory" class="btn btn-secondary ms-2">Add</button>
    </div>

    <div class="selected-categories mt-2">
        @foreach (var category in SelectedCategories)
        {
            <div class="category-box">
                <span class="category-text">@category.Name</span>
                <button type="button" @onclick="() => RemoveCategory(category)" class="btn btn-danger btn-sm">X</button>
            </div>
        }
    </div>
</div>

@code {

    private List<Category> AvailableCategories { get; set; } = new()
    {
        new Category { Name = "Bread" },
        new Category { Name = "Vegan" },
        new Category { Name = "Pastry" },
        new Category { Name = "Dairy" }
    };

    private string SelectedCategory { get; set; } ="Bread";

    [Parameter] public List<Category> SelectedCategories { get; set; } = new();

    [Parameter] public EventCallback<List<Category>> SelectedCategoriesChanged { get; set; }

    private void AddCategory()
    {
        if (!string.IsNullOrEmpty(SelectedCategory))
        {
            var category = AvailableCategories.FirstOrDefault(c => c.Name == SelectedCategory);
            if (category != null && !SelectedCategories.Contains(category))
            {
                SelectedCategories.Add(category);
                SelectedCategoriesChanged.InvokeAsync(SelectedCategories);
            }
        }
    }

    private void RemoveCategory(Category category)
    {
        SelectedCategories.Remove(category);
        SelectedCategoriesChanged.InvokeAsync(SelectedCategories);
    }

    public class Category
    {
        public string Name { get; set; }
    }

}