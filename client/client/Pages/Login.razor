@page "/auth/login"

@using client.DTO.Auth
@using client.Security
@inject NavigationManager NavigationManager
@inject AuthStateProvider AuthStateProvider

<h3>Login</h3>
<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div>
        <label>Email:</label>
        <InputText @bind-Value="loginModel.Email"/>
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginModel.Password" Type="password"/>
    </div>
    <button type="submit">Login</button>
</EditForm>

@if (errorMessage != null)
{
    <p style="color: red;">@errorMessage</p>
}

@code {

    private LoginRequestDto loginModel = new()
    {
        Email = string.Empty,
        Password = string.Empty
    };
    private string? errorMessage;

    private async Task HandleLogin()
    {
        try
        {
            errorMessage = "";
            await AuthStateProvider.LoginAsync(loginModel);
            NavigationManager.NavigateTo("/offers");

        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorMessage = "Invalid credentials. Please try again.";
        }
    }

}